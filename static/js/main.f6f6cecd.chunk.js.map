{"version":3,"sources":["components/Preview.module.css","components/Editor.module.css","components/Editor.js","components/Preview.js","App.js","index.js"],"names":["module","exports","Editor","props","Fragment","className","styles","ToolBar","id","onChange","event","target","value","default","Preview","marked","setOptions","breaks","PreviewWindow","dangerouslySetInnerHTML","__html","enteredText","defaultText","App","useState","text","setText","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iHACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,QAAU,yBAAyB,cAAgB,iC,iBCAxGD,EAAOC,QAAU,CAAC,OAAS,uBAAuB,QAAU,0B,kKCmB7CC,EAjBA,SAACC,GACd,OACE,cAAC,IAAMC,SAAP,UACE,sBAAKC,UAAWC,IAAOJ,OAAvB,UACE,qBAAKG,UAAWC,IAAOC,QAAvB,oBACA,0BACEC,GAAG,SACHC,SAAU,SAACC,GACTP,EAAMM,SAASC,EAAMC,OAAOC,QAE9BA,MAAOT,EAAMU,gB,gCCQRC,EAjBC,SAACX,GAIf,OAHAY,IAAOC,WAAW,CAChBC,QAAQ,IAGR,cAAC,IAAMb,SAAP,UACE,sBAAKC,UAAWC,IAAOQ,QAAvB,UACE,qBAAKT,UAAWC,IAAOC,QAAvB,qBACA,qBAAKF,UAAWC,IAAOY,cACrBC,wBAAyB,CAAEC,OAAQL,IAAOZ,EAAMkB,cAChDb,GAAG,kBCMb,IAAMc,EAAW,qmCA6CFC,EA5Df,WACE,MAAwBC,mBAASF,GAAjC,mBAAOG,EAAP,KAAaC,EAAb,KAMA,OACE,sBAAKrB,UAAU,MAAf,UACE,cAAC,EAAD,CAAQI,SANS,SAACgB,GACpBC,EAAQD,IAK0BZ,QAASY,IACzC,cAAC,EAAD,CAASJ,YAAaI,QCV5BE,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.f6f6cecd.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Preview\":\"Preview_Preview__2tnW4\",\"ToolBar\":\"Preview_ToolBar__1WrNA\",\"PreviewWindow\":\"Preview_PreviewWindow__PmzS2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Editor\":\"Editor_Editor__1YLvD\",\"ToolBar\":\"Editor_ToolBar__EsaQr\"};","import React from \"react\";\r\nimport styles from \"./Editor.module.css\";\r\n\r\nconst Editor = (props) => {\r\n  return (\r\n    <React.Fragment>\r\n      <div className={styles.Editor}>\r\n        <div className={styles.ToolBar}>Editor</div>\r\n        <textarea\r\n          id=\"editor\"\r\n          onChange={(event) => {\r\n            props.onChange(event.target.value);\r\n          }}\r\n          value={props.default}\r\n        ></textarea>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Editor;\r\n","import React from \"react\";\r\nimport styles from \"./Preview.module.css\";\r\nimport marked from \"marked\";\r\n\r\nconst Preview = (props) => {\r\n  marked.setOptions({\r\n    breaks: true,\r\n  });\r\n  return (\r\n    <React.Fragment>\r\n      <div className={styles.Preview}>\r\n        <div className={styles.ToolBar}>Preview</div>\r\n        <div className={styles.PreviewWindow}\r\n          dangerouslySetInnerHTML={{ __html: marked(props.enteredText) }}\r\n          id=\"preview\"\r\n        ></div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Preview;\r\n","import { useState } from \"react\";\nimport \"./App.css\";\nimport Editor from \"./components/Editor\";\nimport Preview from \"./components/Preview\";\n\nfunction App() {\n  const [text, setText] = useState(defaultText);\n\n  const handleChange = (text) => {\n    setText(text);\n  };\n\n  return (\n    <div className=\"App\">\n      <Editor onChange={handleChange} default={text} />\n      <Preview enteredText={text} />\n    </div>\n  );\n}\n\nconst defaultText = `# Welcome to my React Markdown Previewer!\n\n## This is a sub-heading...\n### And here's some other cool stuff:\n\nHeres some code, \\`<div></div>\\`, between 2 backticks.\n\n\\`\\`\\`\n// this is multi-line code:\n\nfunction anotherExample(firstLine, lastLine) {\n  if (firstLine == '\\`\\`\\`' && lastLine == '\\`\\`\\`') {\n    return multiLineCode;\n  }\n}\n\\`\\`\\`\n\nYou can also make text **bold**... whoa!\nOr _italic_.\nOr... wait for it... **_both!_**\nAnd feel free to go crazy ~~crossing stuff out~~.\n\nThere's also [links](https://www.freecodecamp.com), and\n> Block Quotes!\n\nAnd if you want to get really crazy, even tables:\n\nWild Header | Crazy Header | Another Header?\n------------ | ------------- | -------------\nYour content can | be here, and it | can be here....\nAnd here. | Okay. | I think we get it.\n\n- And of course there are lists.\n  - Some are bulleted.\n     - With different indentation levels.\n        - That look like this.\n\n\n1. And there are numbererd lists too.\n1. Use just 1s if you want!\n1. And last but not least, let's not forget embedded images:\n\n![React Logo w/ Text](https://goo.gl/Umyytc)\n`;\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}